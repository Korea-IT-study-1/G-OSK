<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.Gosk.GoskProject20221221.repository.AdminRepository">

    <resultMap id="ProductList" type="com.Gosk.GoskProject20221221.domain.Admin.ProductList">
        <result property="pdname" column="pdname"></result>
        <result property="time" column="time"></result>
        <result property="price" column="price"></result>
    </resultMap>

    <select id="getReservedList" resultMap="ProductList">

        SELECT
            reserved_price_id as id,
            "기간권" as pdname,
            CONCAT(CAST(reserved_time as char(20)),'주') as time,
            CONCAT(CAST(format(reserved_price,0) as char(10)), '원') as price
        FROM
            reserved_price_mst
        ORDER BY
            reserved_time

    </select>
    
    <select id="getGeneralList" resultMap="ProductList">

        SELECT * FROM (
                SELECT
                    oneday_price_id as id,
                    "원데이" as pdname,
                    CONCAT(CAST(oneday_time as char(20)),'시간') as time,
                    CONCAT(CAST(format(oneday_price,0) as char(10)), '원') as price
                FROM
                    oneday_price_mst
                ORDER BY
                    oneday_time
                Limit 1000000
        ) as a

        UNION ALL

        SELECT * FROM (
            SELECT
                commuter_tp_id as id,
                "시간권" as pdname,
                CONCAT(CAST(commuter_tp_time as char(20)),'시간') as time,
                CONCAT(CAST(format(commuter_tp_price,0) as char(10)), '원') as price
            FROM
                commuter_time_price_mst
            ORDER BY
                commuter_tp_time
            LIMIT 1000000
        ) as b

        UNION ALL

        SELECT * FROM (
            SELECT
                commuter_dp_id as id,
                "기간권" as pdname,
                CONCAT(CAST(commuter_dp_time as char(20)),'주') as time,
                CONCAT(CAST(format(commuter_dp_price,0) as char(10)), '원') as price
            FROM
                commuter_day_price_mst
            ORDER BY
                commuter_dp_time
            LIMIT 1000000
        ) as c

    </select>

    <select id="getLockerList" resultMap="ProductList">

        SELECT
            locker_price_id as id,
            "기간권" as pdname,
            CONCAT(CAST(locker_time as char(20)),'주') as time,
            CONCAT(CAST(format(locker_price,0) as char(10)), '원') as price
        FROM
            locker_price_mst
        ORDER BY
            locker_time

    </select>

    <delete id="getDelPayList_oneday">
        DELETE
        FROM
            oneday_price_mst
        WHERE
            oneday_price_id = #{product_id}
    </delete>

    <delete id="getDelPayList_commuter_time">
        DELETE
        FROM
            commuter_time_price_mst
        WHERE
            commuter_tp_id = #{product_id}
    </delete>

    <delete id="getDelPayList_commuter_day">
        DELETE
        FROM
            commuter_day_price_mst
        WHERE
            commuter_dp_id = #{product_id}
    </delete>

    <delete id="getDelPayList_reserved">
        DELETE
        FROM
            reserved_price_mst
        WHERE
            reserved_price_id = #{product_id}
    </delete>

    <delete id="getDelPayList_locker">
        DELETE
        FROM
            locker_price_mst
        WHERE
            locker_price_id = #{product_id}
    </delete>


    <select id="getOverlapChk_oneday" parameterType="com.Gosk.GoskProject20221221.domain.Admin.OverlapChk" resultType="boolean">
        SELECT
            count(oneday_price_id)
        From
            oneday_price_mst
        WHERE
            oneday_time = #{time}
    </select>

    <select id="getOverlapChk_commuter_time" parameterType="com.Gosk.GoskProject20221221.domain.Admin.OverlapChk"
            resultType="boolean">
        SELECT
            count(commuter_tp_id)
        FROM
            commuter_time_price_mst
        WHERE
            commuter_tp_time = #{time}
    </select>

    <select id="getOverlapChk_commuter_day" parameterType="com.Gosk.GoskProject20221221.domain.Admin.OverlapChk"
            resultType="boolean">
        SELECT
            count(commuter_dp_id)
        FROM
            commuter_day_price_mst
        WHERE
            commuter_dp_time = #{time}
    </select>

    <select id="getOverlapChk_reserved" parameterType="com.Gosk.GoskProject20221221.domain.Admin.OverlapChk"
            resultType="boolean">
        SELECT
            count(reserved_price_id)
        FROM
            reserved_price_mst
        WHERE
            reserved_time = #{time}
    </select>

    <select id="getOverlapChk_locker" parameterType="com.Gosk.GoskProject20221221.domain.Admin.OverlapChk"
            resultType="boolean">
        SELECT
            count(locker_price_id)
        FROM
            locker_price_mst
        WHERE
            locker_time = #{time}
    </select>

    <insert id="getInsertPayList_oneday" parameterType="com.Gosk.GoskProject20221221.domain.Admin.OverlapChk">
        INSERT INTO
            oneday_price_mst(oneday_time,oneday_price)
        VALUES (
            #{time},
            #{price}
        )
    </insert>

    <insert id="getInsertPayList_commuter_time" parameterType="com.Gosk.GoskProject20221221.domain.Admin.OverlapChk">
        INSERT INTO
            commuter_time_price_mst(commuter_tp_time,commuter_tp_price)
        VALUES (
            #{time},
            #{price}
        )
    </insert>

    <insert id="getInsertPayList_commuter_day" parameterType="com.Gosk.GoskProject20221221.domain.Admin.OverlapChk">
        INSERT INTO
            commuter_day_price_mst(commuter_dp_time,commuter_dp_price)
        VALUES (
            #{time},
            #{price}
        )
    </insert>

    <insert id="getInsertPayList_reserved" parameterType="com.Gosk.GoskProject20221221.domain.Admin.OverlapChk">
        INSERT INTO
            reserved_price_mst(reserved_time,reserved_price)
        VALUES (
            #{time},
            #{price}
        )
    </insert>

    <insert id="getInsertPayList_locker" parameterType="com.Gosk.GoskProject20221221.domain.Admin.OverlapChk">
        INSERT INTO
            locker_price_mst(locker_time,locker_price)
        VALUES (
            #{time},
            #{price}
        )
    </insert>
</mapper>